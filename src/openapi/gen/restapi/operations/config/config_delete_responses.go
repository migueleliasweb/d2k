// Code generated by go-swagger; DO NOT EDIT.

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ConfigDeleteNoContentCode is the HTTP code returned for type ConfigDeleteNoContent
const ConfigDeleteNoContentCode int = 204

/*ConfigDeleteNoContent no error

swagger:response configDeleteNoContent
*/
type ConfigDeleteNoContent struct {
}

// NewConfigDeleteNoContent creates ConfigDeleteNoContent with default headers values
func NewConfigDeleteNoContent() *ConfigDeleteNoContent {

	return &ConfigDeleteNoContent{}
}

// WriteResponse to the client
func (o *ConfigDeleteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// ConfigDeleteNotFoundCode is the HTTP code returned for type ConfigDeleteNotFound
const ConfigDeleteNotFoundCode int = 404

/*ConfigDeleteNotFound config not found

swagger:response configDeleteNotFound
*/
type ConfigDeleteNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewConfigDeleteNotFound creates ConfigDeleteNotFound with default headers values
func NewConfigDeleteNotFound() *ConfigDeleteNotFound {

	return &ConfigDeleteNotFound{}
}

// WithPayload adds the payload to the config delete not found response
func (o *ConfigDeleteNotFound) WithPayload(payload *models.ErrorResponse) *ConfigDeleteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the config delete not found response
func (o *ConfigDeleteNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfigDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ConfigDeleteInternalServerErrorCode is the HTTP code returned for type ConfigDeleteInternalServerError
const ConfigDeleteInternalServerErrorCode int = 500

/*ConfigDeleteInternalServerError server error

swagger:response configDeleteInternalServerError
*/
type ConfigDeleteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewConfigDeleteInternalServerError creates ConfigDeleteInternalServerError with default headers values
func NewConfigDeleteInternalServerError() *ConfigDeleteInternalServerError {

	return &ConfigDeleteInternalServerError{}
}

// WithPayload adds the payload to the config delete internal server error response
func (o *ConfigDeleteInternalServerError) WithPayload(payload *models.ErrorResponse) *ConfigDeleteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the config delete internal server error response
func (o *ConfigDeleteInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfigDeleteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ConfigDeleteServiceUnavailableCode is the HTTP code returned for type ConfigDeleteServiceUnavailable
const ConfigDeleteServiceUnavailableCode int = 503

/*ConfigDeleteServiceUnavailable node is not part of a swarm

swagger:response configDeleteServiceUnavailable
*/
type ConfigDeleteServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewConfigDeleteServiceUnavailable creates ConfigDeleteServiceUnavailable with default headers values
func NewConfigDeleteServiceUnavailable() *ConfigDeleteServiceUnavailable {

	return &ConfigDeleteServiceUnavailable{}
}

// WithPayload adds the payload to the config delete service unavailable response
func (o *ConfigDeleteServiceUnavailable) WithPayload(payload *models.ErrorResponse) *ConfigDeleteServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the config delete service unavailable response
func (o *ConfigDeleteServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfigDeleteServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

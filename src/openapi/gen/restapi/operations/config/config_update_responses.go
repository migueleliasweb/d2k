// Code generated by go-swagger; DO NOT EDIT.

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ConfigUpdateOKCode is the HTTP code returned for type ConfigUpdateOK
const ConfigUpdateOKCode int = 200

/*ConfigUpdateOK no error

swagger:response configUpdateOK
*/
type ConfigUpdateOK struct {
}

// NewConfigUpdateOK creates ConfigUpdateOK with default headers values
func NewConfigUpdateOK() *ConfigUpdateOK {

	return &ConfigUpdateOK{}
}

// WriteResponse to the client
func (o *ConfigUpdateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ConfigUpdateBadRequestCode is the HTTP code returned for type ConfigUpdateBadRequest
const ConfigUpdateBadRequestCode int = 400

/*ConfigUpdateBadRequest bad parameter

swagger:response configUpdateBadRequest
*/
type ConfigUpdateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewConfigUpdateBadRequest creates ConfigUpdateBadRequest with default headers values
func NewConfigUpdateBadRequest() *ConfigUpdateBadRequest {

	return &ConfigUpdateBadRequest{}
}

// WithPayload adds the payload to the config update bad request response
func (o *ConfigUpdateBadRequest) WithPayload(payload *models.ErrorResponse) *ConfigUpdateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the config update bad request response
func (o *ConfigUpdateBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfigUpdateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ConfigUpdateNotFoundCode is the HTTP code returned for type ConfigUpdateNotFound
const ConfigUpdateNotFoundCode int = 404

/*ConfigUpdateNotFound no such config

swagger:response configUpdateNotFound
*/
type ConfigUpdateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewConfigUpdateNotFound creates ConfigUpdateNotFound with default headers values
func NewConfigUpdateNotFound() *ConfigUpdateNotFound {

	return &ConfigUpdateNotFound{}
}

// WithPayload adds the payload to the config update not found response
func (o *ConfigUpdateNotFound) WithPayload(payload *models.ErrorResponse) *ConfigUpdateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the config update not found response
func (o *ConfigUpdateNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfigUpdateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ConfigUpdateInternalServerErrorCode is the HTTP code returned for type ConfigUpdateInternalServerError
const ConfigUpdateInternalServerErrorCode int = 500

/*ConfigUpdateInternalServerError server error

swagger:response configUpdateInternalServerError
*/
type ConfigUpdateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewConfigUpdateInternalServerError creates ConfigUpdateInternalServerError with default headers values
func NewConfigUpdateInternalServerError() *ConfigUpdateInternalServerError {

	return &ConfigUpdateInternalServerError{}
}

// WithPayload adds the payload to the config update internal server error response
func (o *ConfigUpdateInternalServerError) WithPayload(payload *models.ErrorResponse) *ConfigUpdateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the config update internal server error response
func (o *ConfigUpdateInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfigUpdateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ConfigUpdateServiceUnavailableCode is the HTTP code returned for type ConfigUpdateServiceUnavailable
const ConfigUpdateServiceUnavailableCode int = 503

/*ConfigUpdateServiceUnavailable node is not part of a swarm

swagger:response configUpdateServiceUnavailable
*/
type ConfigUpdateServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewConfigUpdateServiceUnavailable creates ConfigUpdateServiceUnavailable with default headers values
func NewConfigUpdateServiceUnavailable() *ConfigUpdateServiceUnavailable {

	return &ConfigUpdateServiceUnavailable{}
}

// WithPayload adds the payload to the config update service unavailable response
func (o *ConfigUpdateServiceUnavailable) WithPayload(payload *models.ErrorResponse) *ConfigUpdateServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the config update service unavailable response
func (o *ConfigUpdateServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ConfigUpdateServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

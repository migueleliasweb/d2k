// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ImageGetOKCode is the HTTP code returned for type ImageGetOK
const ImageGetOKCode int = 200

/*ImageGetOK no error

swagger:response imageGetOK
*/
type ImageGetOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewImageGetOK creates ImageGetOK with default headers values
func NewImageGetOK() *ImageGetOK {

	return &ImageGetOK{}
}

// WithPayload adds the payload to the image get o k response
func (o *ImageGetOK) WithPayload(payload io.ReadCloser) *ImageGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image get o k response
func (o *ImageGetOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ImageGetInternalServerErrorCode is the HTTP code returned for type ImageGetInternalServerError
const ImageGetInternalServerErrorCode int = 500

/*ImageGetInternalServerError server error

swagger:response imageGetInternalServerError
*/
type ImageGetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewImageGetInternalServerError creates ImageGetInternalServerError with default headers values
func NewImageGetInternalServerError() *ImageGetInternalServerError {

	return &ImageGetInternalServerError{}
}

// WithPayload adds the payload to the image get internal server error response
func (o *ImageGetInternalServerError) WithPayload(payload *models.ErrorResponse) *ImageGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image get internal server error response
func (o *ImageGetInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

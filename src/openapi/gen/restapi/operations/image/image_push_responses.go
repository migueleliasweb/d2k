// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ImagePushOKCode is the HTTP code returned for type ImagePushOK
const ImagePushOKCode int = 200

/*ImagePushOK No error

swagger:response imagePushOK
*/
type ImagePushOK struct {
}

// NewImagePushOK creates ImagePushOK with default headers values
func NewImagePushOK() *ImagePushOK {

	return &ImagePushOK{}
}

// WriteResponse to the client
func (o *ImagePushOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ImagePushNotFoundCode is the HTTP code returned for type ImagePushNotFound
const ImagePushNotFoundCode int = 404

/*ImagePushNotFound No such image

swagger:response imagePushNotFound
*/
type ImagePushNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewImagePushNotFound creates ImagePushNotFound with default headers values
func NewImagePushNotFound() *ImagePushNotFound {

	return &ImagePushNotFound{}
}

// WithPayload adds the payload to the image push not found response
func (o *ImagePushNotFound) WithPayload(payload *models.ErrorResponse) *ImagePushNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image push not found response
func (o *ImagePushNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImagePushNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ImagePushInternalServerErrorCode is the HTTP code returned for type ImagePushInternalServerError
const ImagePushInternalServerErrorCode int = 500

/*ImagePushInternalServerError Server error

swagger:response imagePushInternalServerError
*/
type ImagePushInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewImagePushInternalServerError creates ImagePushInternalServerError with default headers values
func NewImagePushInternalServerError() *ImagePushInternalServerError {

	return &ImagePushInternalServerError{}
}

// WithPayload adds the payload to the image push internal server error response
func (o *ImagePushInternalServerError) WithPayload(payload *models.ErrorResponse) *ImagePushInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image push internal server error response
func (o *ImagePushInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImagePushInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

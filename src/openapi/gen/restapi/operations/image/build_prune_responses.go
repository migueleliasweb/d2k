// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// BuildPruneOKCode is the HTTP code returned for type BuildPruneOK
const BuildPruneOKCode int = 200

/*BuildPruneOK No error

swagger:response buildPruneOK
*/
type BuildPruneOK struct {

	/*
	  In: Body
	*/
	Payload *BuildPruneOKBody `json:"body,omitempty"`
}

// NewBuildPruneOK creates BuildPruneOK with default headers values
func NewBuildPruneOK() *BuildPruneOK {

	return &BuildPruneOK{}
}

// WithPayload adds the payload to the build prune o k response
func (o *BuildPruneOK) WithPayload(payload *BuildPruneOKBody) *BuildPruneOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the build prune o k response
func (o *BuildPruneOK) SetPayload(payload *BuildPruneOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BuildPruneOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BuildPruneInternalServerErrorCode is the HTTP code returned for type BuildPruneInternalServerError
const BuildPruneInternalServerErrorCode int = 500

/*BuildPruneInternalServerError Server error

swagger:response buildPruneInternalServerError
*/
type BuildPruneInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewBuildPruneInternalServerError creates BuildPruneInternalServerError with default headers values
func NewBuildPruneInternalServerError() *BuildPruneInternalServerError {

	return &BuildPruneInternalServerError{}
}

// WithPayload adds the payload to the build prune internal server error response
func (o *BuildPruneInternalServerError) WithPayload(payload *models.ErrorResponse) *BuildPruneInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the build prune internal server error response
func (o *BuildPruneInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BuildPruneInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ImageCreateOKCode is the HTTP code returned for type ImageCreateOK
const ImageCreateOKCode int = 200

/*ImageCreateOK no error

swagger:response imageCreateOK
*/
type ImageCreateOK struct {
}

// NewImageCreateOK creates ImageCreateOK with default headers values
func NewImageCreateOK() *ImageCreateOK {

	return &ImageCreateOK{}
}

// WriteResponse to the client
func (o *ImageCreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ImageCreateNotFoundCode is the HTTP code returned for type ImageCreateNotFound
const ImageCreateNotFoundCode int = 404

/*ImageCreateNotFound repository does not exist or no read access

swagger:response imageCreateNotFound
*/
type ImageCreateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewImageCreateNotFound creates ImageCreateNotFound with default headers values
func NewImageCreateNotFound() *ImageCreateNotFound {

	return &ImageCreateNotFound{}
}

// WithPayload adds the payload to the image create not found response
func (o *ImageCreateNotFound) WithPayload(payload *models.ErrorResponse) *ImageCreateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image create not found response
func (o *ImageCreateNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageCreateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ImageCreateInternalServerErrorCode is the HTTP code returned for type ImageCreateInternalServerError
const ImageCreateInternalServerErrorCode int = 500

/*ImageCreateInternalServerError server error

swagger:response imageCreateInternalServerError
*/
type ImageCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewImageCreateInternalServerError creates ImageCreateInternalServerError with default headers values
func NewImageCreateInternalServerError() *ImageCreateInternalServerError {

	return &ImageCreateInternalServerError{}
}

// WithPayload adds the payload to the image create internal server error response
func (o *ImageCreateInternalServerError) WithPayload(payload *models.ErrorResponse) *ImageCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image create internal server error response
func (o *ImageCreateInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ImageDeleteOKCode is the HTTP code returned for type ImageDeleteOK
const ImageDeleteOKCode int = 200

/*ImageDeleteOK The image was deleted successfully

swagger:response imageDeleteOK
*/
type ImageDeleteOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ImageDeleteResponseItem `json:"body,omitempty"`
}

// NewImageDeleteOK creates ImageDeleteOK with default headers values
func NewImageDeleteOK() *ImageDeleteOK {

	return &ImageDeleteOK{}
}

// WithPayload adds the payload to the image delete o k response
func (o *ImageDeleteOK) WithPayload(payload []*models.ImageDeleteResponseItem) *ImageDeleteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image delete o k response
func (o *ImageDeleteOK) SetPayload(payload []*models.ImageDeleteResponseItem) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageDeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ImageDeleteResponseItem, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ImageDeleteNotFoundCode is the HTTP code returned for type ImageDeleteNotFound
const ImageDeleteNotFoundCode int = 404

/*ImageDeleteNotFound No such image

swagger:response imageDeleteNotFound
*/
type ImageDeleteNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewImageDeleteNotFound creates ImageDeleteNotFound with default headers values
func NewImageDeleteNotFound() *ImageDeleteNotFound {

	return &ImageDeleteNotFound{}
}

// WithPayload adds the payload to the image delete not found response
func (o *ImageDeleteNotFound) WithPayload(payload *models.ErrorResponse) *ImageDeleteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image delete not found response
func (o *ImageDeleteNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ImageDeleteConflictCode is the HTTP code returned for type ImageDeleteConflict
const ImageDeleteConflictCode int = 409

/*ImageDeleteConflict Conflict

swagger:response imageDeleteConflict
*/
type ImageDeleteConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewImageDeleteConflict creates ImageDeleteConflict with default headers values
func NewImageDeleteConflict() *ImageDeleteConflict {

	return &ImageDeleteConflict{}
}

// WithPayload adds the payload to the image delete conflict response
func (o *ImageDeleteConflict) WithPayload(payload *models.ErrorResponse) *ImageDeleteConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image delete conflict response
func (o *ImageDeleteConflict) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageDeleteConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ImageDeleteInternalServerErrorCode is the HTTP code returned for type ImageDeleteInternalServerError
const ImageDeleteInternalServerErrorCode int = 500

/*ImageDeleteInternalServerError Server error

swagger:response imageDeleteInternalServerError
*/
type ImageDeleteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewImageDeleteInternalServerError creates ImageDeleteInternalServerError with default headers values
func NewImageDeleteInternalServerError() *ImageDeleteInternalServerError {

	return &ImageDeleteInternalServerError{}
}

// WithPayload adds the payload to the image delete internal server error response
func (o *ImageDeleteInternalServerError) WithPayload(payload *models.ErrorResponse) *ImageDeleteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image delete internal server error response
func (o *ImageDeleteInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageDeleteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

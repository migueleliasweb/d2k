// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ImageGetAllOKCode is the HTTP code returned for type ImageGetAllOK
const ImageGetAllOKCode int = 200

/*ImageGetAllOK no error

swagger:response imageGetAllOK
*/
type ImageGetAllOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewImageGetAllOK creates ImageGetAllOK with default headers values
func NewImageGetAllOK() *ImageGetAllOK {

	return &ImageGetAllOK{}
}

// WithPayload adds the payload to the image get all o k response
func (o *ImageGetAllOK) WithPayload(payload io.ReadCloser) *ImageGetAllOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image get all o k response
func (o *ImageGetAllOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageGetAllOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ImageGetAllInternalServerErrorCode is the HTTP code returned for type ImageGetAllInternalServerError
const ImageGetAllInternalServerErrorCode int = 500

/*ImageGetAllInternalServerError server error

swagger:response imageGetAllInternalServerError
*/
type ImageGetAllInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewImageGetAllInternalServerError creates ImageGetAllInternalServerError with default headers values
func NewImageGetAllInternalServerError() *ImageGetAllInternalServerError {

	return &ImageGetAllInternalServerError{}
}

// WithPayload adds the payload to the image get all internal server error response
func (o *ImageGetAllInternalServerError) WithPayload(payload *models.ErrorResponse) *ImageGetAllInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image get all internal server error response
func (o *ImageGetAllInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageGetAllInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

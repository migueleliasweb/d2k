// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ImageBuildOKCode is the HTTP code returned for type ImageBuildOK
const ImageBuildOKCode int = 200

/*ImageBuildOK no error

swagger:response imageBuildOK
*/
type ImageBuildOK struct {
}

// NewImageBuildOK creates ImageBuildOK with default headers values
func NewImageBuildOK() *ImageBuildOK {

	return &ImageBuildOK{}
}

// WriteResponse to the client
func (o *ImageBuildOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ImageBuildBadRequestCode is the HTTP code returned for type ImageBuildBadRequest
const ImageBuildBadRequestCode int = 400

/*ImageBuildBadRequest Bad parameter

swagger:response imageBuildBadRequest
*/
type ImageBuildBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewImageBuildBadRequest creates ImageBuildBadRequest with default headers values
func NewImageBuildBadRequest() *ImageBuildBadRequest {

	return &ImageBuildBadRequest{}
}

// WithPayload adds the payload to the image build bad request response
func (o *ImageBuildBadRequest) WithPayload(payload *models.ErrorResponse) *ImageBuildBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image build bad request response
func (o *ImageBuildBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageBuildBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ImageBuildInternalServerErrorCode is the HTTP code returned for type ImageBuildInternalServerError
const ImageBuildInternalServerErrorCode int = 500

/*ImageBuildInternalServerError server error

swagger:response imageBuildInternalServerError
*/
type ImageBuildInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewImageBuildInternalServerError creates ImageBuildInternalServerError with default headers values
func NewImageBuildInternalServerError() *ImageBuildInternalServerError {

	return &ImageBuildInternalServerError{}
}

// WithPayload adds the payload to the image build internal server error response
func (o *ImageBuildInternalServerError) WithPayload(payload *models.ErrorResponse) *ImageBuildInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image build internal server error response
func (o *ImageBuildInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageBuildInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ImageSearchOKCode is the HTTP code returned for type ImageSearchOK
const ImageSearchOKCode int = 200

/*ImageSearchOK No error

swagger:response imageSearchOK
*/
type ImageSearchOK struct {

	/*
	  In: Body
	*/
	Payload []*ImageSearchOKBodyItems0 `json:"body,omitempty"`
}

// NewImageSearchOK creates ImageSearchOK with default headers values
func NewImageSearchOK() *ImageSearchOK {

	return &ImageSearchOK{}
}

// WithPayload adds the payload to the image search o k response
func (o *ImageSearchOK) WithPayload(payload []*ImageSearchOKBodyItems0) *ImageSearchOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image search o k response
func (o *ImageSearchOK) SetPayload(payload []*ImageSearchOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageSearchOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*ImageSearchOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ImageSearchInternalServerErrorCode is the HTTP code returned for type ImageSearchInternalServerError
const ImageSearchInternalServerErrorCode int = 500

/*ImageSearchInternalServerError Server error

swagger:response imageSearchInternalServerError
*/
type ImageSearchInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewImageSearchInternalServerError creates ImageSearchInternalServerError with default headers values
func NewImageSearchInternalServerError() *ImageSearchInternalServerError {

	return &ImageSearchInternalServerError{}
}

// WithPayload adds the payload to the image search internal server error response
func (o *ImageSearchInternalServerError) WithPayload(payload *models.ErrorResponse) *ImageSearchInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image search internal server error response
func (o *ImageSearchInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageSearchInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

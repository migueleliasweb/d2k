// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ImageListOKCode is the HTTP code returned for type ImageListOK
const ImageListOKCode int = 200

/*ImageListOK Summary image data for the images matching the query

swagger:response imageListOK
*/
type ImageListOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ImageSummary `json:"body,omitempty"`
}

// NewImageListOK creates ImageListOK with default headers values
func NewImageListOK() *ImageListOK {

	return &ImageListOK{}
}

// WithPayload adds the payload to the image list o k response
func (o *ImageListOK) WithPayload(payload []*models.ImageSummary) *ImageListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image list o k response
func (o *ImageListOK) SetPayload(payload []*models.ImageSummary) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ImageSummary, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ImageListInternalServerErrorCode is the HTTP code returned for type ImageListInternalServerError
const ImageListInternalServerErrorCode int = 500

/*ImageListInternalServerError server error

swagger:response imageListInternalServerError
*/
type ImageListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewImageListInternalServerError creates ImageListInternalServerError with default headers values
func NewImageListInternalServerError() *ImageListInternalServerError {

	return &ImageListInternalServerError{}
}

// WithPayload adds the payload to the image list internal server error response
func (o *ImageListInternalServerError) WithPayload(payload *models.ErrorResponse) *ImageListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the image list internal server error response
func (o *ImageListInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImageListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package exec

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ExecStartOKCode is the HTTP code returned for type ExecStartOK
const ExecStartOKCode int = 200

/*ExecStartOK No error

swagger:response execStartOK
*/
type ExecStartOK struct {
}

// NewExecStartOK creates ExecStartOK with default headers values
func NewExecStartOK() *ExecStartOK {

	return &ExecStartOK{}
}

// WriteResponse to the client
func (o *ExecStartOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ExecStartNotFoundCode is the HTTP code returned for type ExecStartNotFound
const ExecStartNotFoundCode int = 404

/*ExecStartNotFound No such exec instance

swagger:response execStartNotFound
*/
type ExecStartNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewExecStartNotFound creates ExecStartNotFound with default headers values
func NewExecStartNotFound() *ExecStartNotFound {

	return &ExecStartNotFound{}
}

// WithPayload adds the payload to the exec start not found response
func (o *ExecStartNotFound) WithPayload(payload *models.ErrorResponse) *ExecStartNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the exec start not found response
func (o *ExecStartNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ExecStartNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ExecStartConflictCode is the HTTP code returned for type ExecStartConflict
const ExecStartConflictCode int = 409

/*ExecStartConflict Container is stopped or paused

swagger:response execStartConflict
*/
type ExecStartConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewExecStartConflict creates ExecStartConflict with default headers values
func NewExecStartConflict() *ExecStartConflict {

	return &ExecStartConflict{}
}

// WithPayload adds the payload to the exec start conflict response
func (o *ExecStartConflict) WithPayload(payload *models.ErrorResponse) *ExecStartConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the exec start conflict response
func (o *ExecStartConflict) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ExecStartConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package exec

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ContainerExecCreatedCode is the HTTP code returned for type ContainerExecCreated
const ContainerExecCreatedCode int = 201

/*ContainerExecCreated no error

swagger:response containerExecCreated
*/
type ContainerExecCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IDResponse `json:"body,omitempty"`
}

// NewContainerExecCreated creates ContainerExecCreated with default headers values
func NewContainerExecCreated() *ContainerExecCreated {

	return &ContainerExecCreated{}
}

// WithPayload adds the payload to the container exec created response
func (o *ContainerExecCreated) WithPayload(payload *models.IDResponse) *ContainerExecCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container exec created response
func (o *ContainerExecCreated) SetPayload(payload *models.IDResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerExecCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ContainerExecNotFoundCode is the HTTP code returned for type ContainerExecNotFound
const ContainerExecNotFoundCode int = 404

/*ContainerExecNotFound no such container

swagger:response containerExecNotFound
*/
type ContainerExecNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerExecNotFound creates ContainerExecNotFound with default headers values
func NewContainerExecNotFound() *ContainerExecNotFound {

	return &ContainerExecNotFound{}
}

// WithPayload adds the payload to the container exec not found response
func (o *ContainerExecNotFound) WithPayload(payload *models.ErrorResponse) *ContainerExecNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container exec not found response
func (o *ContainerExecNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerExecNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ContainerExecConflictCode is the HTTP code returned for type ContainerExecConflict
const ContainerExecConflictCode int = 409

/*ContainerExecConflict container is paused

swagger:response containerExecConflict
*/
type ContainerExecConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerExecConflict creates ContainerExecConflict with default headers values
func NewContainerExecConflict() *ContainerExecConflict {

	return &ContainerExecConflict{}
}

// WithPayload adds the payload to the container exec conflict response
func (o *ContainerExecConflict) WithPayload(payload *models.ErrorResponse) *ContainerExecConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container exec conflict response
func (o *ContainerExecConflict) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerExecConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ContainerExecInternalServerErrorCode is the HTTP code returned for type ContainerExecInternalServerError
const ContainerExecInternalServerErrorCode int = 500

/*ContainerExecInternalServerError Server error

swagger:response containerExecInternalServerError
*/
type ContainerExecInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerExecInternalServerError creates ContainerExecInternalServerError with default headers values
func NewContainerExecInternalServerError() *ContainerExecInternalServerError {

	return &ContainerExecInternalServerError{}
}

// WithPayload adds the payload to the container exec internal server error response
func (o *ContainerExecInternalServerError) WithPayload(payload *models.ErrorResponse) *ContainerExecInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container exec internal server error response
func (o *ContainerExecInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerExecInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

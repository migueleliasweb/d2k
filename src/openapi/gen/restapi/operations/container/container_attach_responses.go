// Code generated by go-swagger; DO NOT EDIT.

package container

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ContainerAttachSwitchingProtocolsCode is the HTTP code returned for type ContainerAttachSwitchingProtocols
const ContainerAttachSwitchingProtocolsCode int = 101

/*ContainerAttachSwitchingProtocols no error, hints proxy about hijacking

swagger:response containerAttachSwitchingProtocols
*/
type ContainerAttachSwitchingProtocols struct {
}

// NewContainerAttachSwitchingProtocols creates ContainerAttachSwitchingProtocols with default headers values
func NewContainerAttachSwitchingProtocols() *ContainerAttachSwitchingProtocols {

	return &ContainerAttachSwitchingProtocols{}
}

// WriteResponse to the client
func (o *ContainerAttachSwitchingProtocols) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(101)
}

// ContainerAttachOKCode is the HTTP code returned for type ContainerAttachOK
const ContainerAttachOKCode int = 200

/*ContainerAttachOK no error, no upgrade header found

swagger:response containerAttachOK
*/
type ContainerAttachOK struct {
}

// NewContainerAttachOK creates ContainerAttachOK with default headers values
func NewContainerAttachOK() *ContainerAttachOK {

	return &ContainerAttachOK{}
}

// WriteResponse to the client
func (o *ContainerAttachOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ContainerAttachBadRequestCode is the HTTP code returned for type ContainerAttachBadRequest
const ContainerAttachBadRequestCode int = 400

/*ContainerAttachBadRequest bad parameter

swagger:response containerAttachBadRequest
*/
type ContainerAttachBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerAttachBadRequest creates ContainerAttachBadRequest with default headers values
func NewContainerAttachBadRequest() *ContainerAttachBadRequest {

	return &ContainerAttachBadRequest{}
}

// WithPayload adds the payload to the container attach bad request response
func (o *ContainerAttachBadRequest) WithPayload(payload *models.ErrorResponse) *ContainerAttachBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container attach bad request response
func (o *ContainerAttachBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerAttachBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ContainerAttachNotFoundCode is the HTTP code returned for type ContainerAttachNotFound
const ContainerAttachNotFoundCode int = 404

/*ContainerAttachNotFound no such container

swagger:response containerAttachNotFound
*/
type ContainerAttachNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerAttachNotFound creates ContainerAttachNotFound with default headers values
func NewContainerAttachNotFound() *ContainerAttachNotFound {

	return &ContainerAttachNotFound{}
}

// WithPayload adds the payload to the container attach not found response
func (o *ContainerAttachNotFound) WithPayload(payload *models.ErrorResponse) *ContainerAttachNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container attach not found response
func (o *ContainerAttachNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerAttachNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ContainerAttachInternalServerErrorCode is the HTTP code returned for type ContainerAttachInternalServerError
const ContainerAttachInternalServerErrorCode int = 500

/*ContainerAttachInternalServerError server error

swagger:response containerAttachInternalServerError
*/
type ContainerAttachInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerAttachInternalServerError creates ContainerAttachInternalServerError with default headers values
func NewContainerAttachInternalServerError() *ContainerAttachInternalServerError {

	return &ContainerAttachInternalServerError{}
}

// WithPayload adds the payload to the container attach internal server error response
func (o *ContainerAttachInternalServerError) WithPayload(payload *models.ErrorResponse) *ContainerAttachInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container attach internal server error response
func (o *ContainerAttachInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerAttachInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

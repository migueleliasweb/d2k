// Code generated by go-swagger; DO NOT EDIT.

package swarm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// SwarmLeaveOKCode is the HTTP code returned for type SwarmLeaveOK
const SwarmLeaveOKCode int = 200

/*SwarmLeaveOK no error

swagger:response swarmLeaveOK
*/
type SwarmLeaveOK struct {
}

// NewSwarmLeaveOK creates SwarmLeaveOK with default headers values
func NewSwarmLeaveOK() *SwarmLeaveOK {

	return &SwarmLeaveOK{}
}

// WriteResponse to the client
func (o *SwarmLeaveOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SwarmLeaveInternalServerErrorCode is the HTTP code returned for type SwarmLeaveInternalServerError
const SwarmLeaveInternalServerErrorCode int = 500

/*SwarmLeaveInternalServerError server error

swagger:response swarmLeaveInternalServerError
*/
type SwarmLeaveInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSwarmLeaveInternalServerError creates SwarmLeaveInternalServerError with default headers values
func NewSwarmLeaveInternalServerError() *SwarmLeaveInternalServerError {

	return &SwarmLeaveInternalServerError{}
}

// WithPayload adds the payload to the swarm leave internal server error response
func (o *SwarmLeaveInternalServerError) WithPayload(payload *models.ErrorResponse) *SwarmLeaveInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the swarm leave internal server error response
func (o *SwarmLeaveInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SwarmLeaveInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SwarmLeaveServiceUnavailableCode is the HTTP code returned for type SwarmLeaveServiceUnavailable
const SwarmLeaveServiceUnavailableCode int = 503

/*SwarmLeaveServiceUnavailable node is not part of a swarm

swagger:response swarmLeaveServiceUnavailable
*/
type SwarmLeaveServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSwarmLeaveServiceUnavailable creates SwarmLeaveServiceUnavailable with default headers values
func NewSwarmLeaveServiceUnavailable() *SwarmLeaveServiceUnavailable {

	return &SwarmLeaveServiceUnavailable{}
}

// WithPayload adds the payload to the swarm leave service unavailable response
func (o *SwarmLeaveServiceUnavailable) WithPayload(payload *models.ErrorResponse) *SwarmLeaveServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the swarm leave service unavailable response
func (o *SwarmLeaveServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SwarmLeaveServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

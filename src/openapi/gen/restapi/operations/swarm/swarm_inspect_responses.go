// Code generated by go-swagger; DO NOT EDIT.

package swarm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// SwarmInspectOKCode is the HTTP code returned for type SwarmInspectOK
const SwarmInspectOKCode int = 200

/*SwarmInspectOK no error

swagger:response swarmInspectOK
*/
type SwarmInspectOK struct {

	/*
	  In: Body
	*/
	Payload *models.Swarm `json:"body,omitempty"`
}

// NewSwarmInspectOK creates SwarmInspectOK with default headers values
func NewSwarmInspectOK() *SwarmInspectOK {

	return &SwarmInspectOK{}
}

// WithPayload adds the payload to the swarm inspect o k response
func (o *SwarmInspectOK) WithPayload(payload *models.Swarm) *SwarmInspectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the swarm inspect o k response
func (o *SwarmInspectOK) SetPayload(payload *models.Swarm) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SwarmInspectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SwarmInspectNotFoundCode is the HTTP code returned for type SwarmInspectNotFound
const SwarmInspectNotFoundCode int = 404

/*SwarmInspectNotFound no such swarm

swagger:response swarmInspectNotFound
*/
type SwarmInspectNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSwarmInspectNotFound creates SwarmInspectNotFound with default headers values
func NewSwarmInspectNotFound() *SwarmInspectNotFound {

	return &SwarmInspectNotFound{}
}

// WithPayload adds the payload to the swarm inspect not found response
func (o *SwarmInspectNotFound) WithPayload(payload *models.ErrorResponse) *SwarmInspectNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the swarm inspect not found response
func (o *SwarmInspectNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SwarmInspectNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SwarmInspectInternalServerErrorCode is the HTTP code returned for type SwarmInspectInternalServerError
const SwarmInspectInternalServerErrorCode int = 500

/*SwarmInspectInternalServerError server error

swagger:response swarmInspectInternalServerError
*/
type SwarmInspectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSwarmInspectInternalServerError creates SwarmInspectInternalServerError with default headers values
func NewSwarmInspectInternalServerError() *SwarmInspectInternalServerError {

	return &SwarmInspectInternalServerError{}
}

// WithPayload adds the payload to the swarm inspect internal server error response
func (o *SwarmInspectInternalServerError) WithPayload(payload *models.ErrorResponse) *SwarmInspectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the swarm inspect internal server error response
func (o *SwarmInspectInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SwarmInspectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SwarmInspectServiceUnavailableCode is the HTTP code returned for type SwarmInspectServiceUnavailable
const SwarmInspectServiceUnavailableCode int = 503

/*SwarmInspectServiceUnavailable node is not part of a swarm

swagger:response swarmInspectServiceUnavailable
*/
type SwarmInspectServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSwarmInspectServiceUnavailable creates SwarmInspectServiceUnavailable with default headers values
func NewSwarmInspectServiceUnavailable() *SwarmInspectServiceUnavailable {

	return &SwarmInspectServiceUnavailable{}
}

// WithPayload adds the payload to the swarm inspect service unavailable response
func (o *SwarmInspectServiceUnavailable) WithPayload(payload *models.ErrorResponse) *SwarmInspectServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the swarm inspect service unavailable response
func (o *SwarmInspectServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SwarmInspectServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

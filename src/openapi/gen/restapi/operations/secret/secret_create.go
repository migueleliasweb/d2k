// Code generated by go-swagger; DO NOT EDIT.

package secret

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// SecretCreateHandlerFunc turns a function with the right signature into a secret create handler
type SecretCreateHandlerFunc func(SecretCreateParams) middleware.Responder

// Handle executing the request and returning a response
func (fn SecretCreateHandlerFunc) Handle(params SecretCreateParams) middleware.Responder {
	return fn(params)
}

// SecretCreateHandler interface for that can handle valid secret create params
type SecretCreateHandler interface {
	Handle(SecretCreateParams) middleware.Responder
}

// NewSecretCreate creates a new http.Handler for the secret create operation
func NewSecretCreate(ctx *middleware.Context, handler SecretCreateHandler) *SecretCreate {
	return &SecretCreate{Context: ctx, Handler: handler}
}

/* SecretCreate swagger:route POST /secrets/create Secret secretCreate

Create a secret

*/
type SecretCreate struct {
	Context *middleware.Context
	Handler SecretCreateHandler
}

func (o *SecretCreate) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewSecretCreateParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// SecretCreateBody secret create body
//
// swagger:model SecretCreateBody
type SecretCreateBody struct {
	models.SecretSpec

	SecretCreateParamsBodyAllOf1
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *SecretCreateBody) UnmarshalJSON(raw []byte) error {
	// SecretCreateParamsBodyAO0
	var secretCreateParamsBodyAO0 models.SecretSpec
	if err := swag.ReadJSON(raw, &secretCreateParamsBodyAO0); err != nil {
		return err
	}
	o.SecretSpec = secretCreateParamsBodyAO0

	// SecretCreateParamsBodyAO1
	var secretCreateParamsBodyAO1 SecretCreateParamsBodyAllOf1
	if err := swag.ReadJSON(raw, &secretCreateParamsBodyAO1); err != nil {
		return err
	}
	o.SecretCreateParamsBodyAllOf1 = secretCreateParamsBodyAO1

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o SecretCreateBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	secretCreateParamsBodyAO0, err := swag.WriteJSON(o.SecretSpec)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, secretCreateParamsBodyAO0)

	secretCreateParamsBodyAO1, err := swag.WriteJSON(o.SecretCreateParamsBodyAllOf1)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, secretCreateParamsBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this secret create body
func (o *SecretCreateBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SecretSpec
	if err := o.SecretSpec.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with SecretCreateParamsBodyAllOf1

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validate this secret create body based on the context it is used
func (o *SecretCreateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SecretSpec
	if err := o.SecretSpec.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with SecretCreateParamsBodyAllOf1

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *SecretCreateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SecretCreateBody) UnmarshalBinary(b []byte) error {
	var res SecretCreateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// SecretCreateParamsBodyAllOf1 secret create params body all of1
// Example: {"Data":"VEhJUyBJUyBOT1QgQSBSRUFMIENFUlRJRklDQVRFCg==","Driver":{"Name":"secret-bucket","Options":{"OptionA":"value for driver option A","OptionB":"value for driver option B"}},"Labels":{"foo":"bar"},"Name":"app-key.crt"}
//
// swagger:model SecretCreateParamsBodyAllOf1
type SecretCreateParamsBodyAllOf1 interface{}

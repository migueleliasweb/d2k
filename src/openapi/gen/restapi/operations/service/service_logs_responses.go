// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ServiceLogsOKCode is the HTTP code returned for type ServiceLogsOK
const ServiceLogsOKCode int = 200

/*ServiceLogsOK logs returned as a stream in response body

swagger:response serviceLogsOK
*/
type ServiceLogsOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewServiceLogsOK creates ServiceLogsOK with default headers values
func NewServiceLogsOK() *ServiceLogsOK {

	return &ServiceLogsOK{}
}

// WithPayload adds the payload to the service logs o k response
func (o *ServiceLogsOK) WithPayload(payload io.ReadCloser) *ServiceLogsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service logs o k response
func (o *ServiceLogsOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceLogsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ServiceLogsNotFoundCode is the HTTP code returned for type ServiceLogsNotFound
const ServiceLogsNotFoundCode int = 404

/*ServiceLogsNotFound no such service

swagger:response serviceLogsNotFound
*/
type ServiceLogsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceLogsNotFound creates ServiceLogsNotFound with default headers values
func NewServiceLogsNotFound() *ServiceLogsNotFound {

	return &ServiceLogsNotFound{}
}

// WithPayload adds the payload to the service logs not found response
func (o *ServiceLogsNotFound) WithPayload(payload *models.ErrorResponse) *ServiceLogsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service logs not found response
func (o *ServiceLogsNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceLogsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceLogsInternalServerErrorCode is the HTTP code returned for type ServiceLogsInternalServerError
const ServiceLogsInternalServerErrorCode int = 500

/*ServiceLogsInternalServerError server error

swagger:response serviceLogsInternalServerError
*/
type ServiceLogsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceLogsInternalServerError creates ServiceLogsInternalServerError with default headers values
func NewServiceLogsInternalServerError() *ServiceLogsInternalServerError {

	return &ServiceLogsInternalServerError{}
}

// WithPayload adds the payload to the service logs internal server error response
func (o *ServiceLogsInternalServerError) WithPayload(payload *models.ErrorResponse) *ServiceLogsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service logs internal server error response
func (o *ServiceLogsInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceLogsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceLogsServiceUnavailableCode is the HTTP code returned for type ServiceLogsServiceUnavailable
const ServiceLogsServiceUnavailableCode int = 503

/*ServiceLogsServiceUnavailable node is not part of a swarm

swagger:response serviceLogsServiceUnavailable
*/
type ServiceLogsServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceLogsServiceUnavailable creates ServiceLogsServiceUnavailable with default headers values
func NewServiceLogsServiceUnavailable() *ServiceLogsServiceUnavailable {

	return &ServiceLogsServiceUnavailable{}
}

// WithPayload adds the payload to the service logs service unavailable response
func (o *ServiceLogsServiceUnavailable) WithPayload(payload *models.ErrorResponse) *ServiceLogsServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service logs service unavailable response
func (o *ServiceLogsServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceLogsServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

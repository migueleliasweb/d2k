// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ServiceDeleteOKCode is the HTTP code returned for type ServiceDeleteOK
const ServiceDeleteOKCode int = 200

/*ServiceDeleteOK no error

swagger:response serviceDeleteOK
*/
type ServiceDeleteOK struct {
}

// NewServiceDeleteOK creates ServiceDeleteOK with default headers values
func NewServiceDeleteOK() *ServiceDeleteOK {

	return &ServiceDeleteOK{}
}

// WriteResponse to the client
func (o *ServiceDeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ServiceDeleteNotFoundCode is the HTTP code returned for type ServiceDeleteNotFound
const ServiceDeleteNotFoundCode int = 404

/*ServiceDeleteNotFound no such service

swagger:response serviceDeleteNotFound
*/
type ServiceDeleteNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceDeleteNotFound creates ServiceDeleteNotFound with default headers values
func NewServiceDeleteNotFound() *ServiceDeleteNotFound {

	return &ServiceDeleteNotFound{}
}

// WithPayload adds the payload to the service delete not found response
func (o *ServiceDeleteNotFound) WithPayload(payload *models.ErrorResponse) *ServiceDeleteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service delete not found response
func (o *ServiceDeleteNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceDeleteInternalServerErrorCode is the HTTP code returned for type ServiceDeleteInternalServerError
const ServiceDeleteInternalServerErrorCode int = 500

/*ServiceDeleteInternalServerError server error

swagger:response serviceDeleteInternalServerError
*/
type ServiceDeleteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceDeleteInternalServerError creates ServiceDeleteInternalServerError with default headers values
func NewServiceDeleteInternalServerError() *ServiceDeleteInternalServerError {

	return &ServiceDeleteInternalServerError{}
}

// WithPayload adds the payload to the service delete internal server error response
func (o *ServiceDeleteInternalServerError) WithPayload(payload *models.ErrorResponse) *ServiceDeleteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service delete internal server error response
func (o *ServiceDeleteInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceDeleteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceDeleteServiceUnavailableCode is the HTTP code returned for type ServiceDeleteServiceUnavailable
const ServiceDeleteServiceUnavailableCode int = 503

/*ServiceDeleteServiceUnavailable node is not part of a swarm

swagger:response serviceDeleteServiceUnavailable
*/
type ServiceDeleteServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceDeleteServiceUnavailable creates ServiceDeleteServiceUnavailable with default headers values
func NewServiceDeleteServiceUnavailable() *ServiceDeleteServiceUnavailable {

	return &ServiceDeleteServiceUnavailable{}
}

// WithPayload adds the payload to the service delete service unavailable response
func (o *ServiceDeleteServiceUnavailable) WithPayload(payload *models.ErrorResponse) *ServiceDeleteServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service delete service unavailable response
func (o *ServiceDeleteServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceDeleteServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

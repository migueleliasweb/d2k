// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// ServiceUpdateOKCode is the HTTP code returned for type ServiceUpdateOK
const ServiceUpdateOKCode int = 200

/*ServiceUpdateOK no error

swagger:response serviceUpdateOK
*/
type ServiceUpdateOK struct {

	/*
	  In: Body
	*/
	Payload *models.ServiceUpdateResponse `json:"body,omitempty"`
}

// NewServiceUpdateOK creates ServiceUpdateOK with default headers values
func NewServiceUpdateOK() *ServiceUpdateOK {

	return &ServiceUpdateOK{}
}

// WithPayload adds the payload to the service update o k response
func (o *ServiceUpdateOK) WithPayload(payload *models.ServiceUpdateResponse) *ServiceUpdateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service update o k response
func (o *ServiceUpdateOK) SetPayload(payload *models.ServiceUpdateResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceUpdateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceUpdateBadRequestCode is the HTTP code returned for type ServiceUpdateBadRequest
const ServiceUpdateBadRequestCode int = 400

/*ServiceUpdateBadRequest bad parameter

swagger:response serviceUpdateBadRequest
*/
type ServiceUpdateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceUpdateBadRequest creates ServiceUpdateBadRequest with default headers values
func NewServiceUpdateBadRequest() *ServiceUpdateBadRequest {

	return &ServiceUpdateBadRequest{}
}

// WithPayload adds the payload to the service update bad request response
func (o *ServiceUpdateBadRequest) WithPayload(payload *models.ErrorResponse) *ServiceUpdateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service update bad request response
func (o *ServiceUpdateBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceUpdateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceUpdateNotFoundCode is the HTTP code returned for type ServiceUpdateNotFound
const ServiceUpdateNotFoundCode int = 404

/*ServiceUpdateNotFound no such service

swagger:response serviceUpdateNotFound
*/
type ServiceUpdateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceUpdateNotFound creates ServiceUpdateNotFound with default headers values
func NewServiceUpdateNotFound() *ServiceUpdateNotFound {

	return &ServiceUpdateNotFound{}
}

// WithPayload adds the payload to the service update not found response
func (o *ServiceUpdateNotFound) WithPayload(payload *models.ErrorResponse) *ServiceUpdateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service update not found response
func (o *ServiceUpdateNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceUpdateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceUpdateInternalServerErrorCode is the HTTP code returned for type ServiceUpdateInternalServerError
const ServiceUpdateInternalServerErrorCode int = 500

/*ServiceUpdateInternalServerError server error

swagger:response serviceUpdateInternalServerError
*/
type ServiceUpdateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceUpdateInternalServerError creates ServiceUpdateInternalServerError with default headers values
func NewServiceUpdateInternalServerError() *ServiceUpdateInternalServerError {

	return &ServiceUpdateInternalServerError{}
}

// WithPayload adds the payload to the service update internal server error response
func (o *ServiceUpdateInternalServerError) WithPayload(payload *models.ErrorResponse) *ServiceUpdateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service update internal server error response
func (o *ServiceUpdateInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceUpdateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceUpdateServiceUnavailableCode is the HTTP code returned for type ServiceUpdateServiceUnavailable
const ServiceUpdateServiceUnavailableCode int = 503

/*ServiceUpdateServiceUnavailable node is not part of a swarm

swagger:response serviceUpdateServiceUnavailable
*/
type ServiceUpdateServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceUpdateServiceUnavailable creates ServiceUpdateServiceUnavailable with default headers values
func NewServiceUpdateServiceUnavailable() *ServiceUpdateServiceUnavailable {

	return &ServiceUpdateServiceUnavailable{}
}

// WithPayload adds the payload to the service update service unavailable response
func (o *ServiceUpdateServiceUnavailable) WithPayload(payload *models.ErrorResponse) *ServiceUpdateServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service update service unavailable response
func (o *ServiceUpdateServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceUpdateServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

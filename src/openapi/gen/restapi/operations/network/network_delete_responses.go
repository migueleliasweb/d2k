// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// NetworkDeleteNoContentCode is the HTTP code returned for type NetworkDeleteNoContent
const NetworkDeleteNoContentCode int = 204

/*NetworkDeleteNoContent No error

swagger:response networkDeleteNoContent
*/
type NetworkDeleteNoContent struct {
}

// NewNetworkDeleteNoContent creates NetworkDeleteNoContent with default headers values
func NewNetworkDeleteNoContent() *NetworkDeleteNoContent {

	return &NetworkDeleteNoContent{}
}

// WriteResponse to the client
func (o *NetworkDeleteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// NetworkDeleteForbiddenCode is the HTTP code returned for type NetworkDeleteForbidden
const NetworkDeleteForbiddenCode int = 403

/*NetworkDeleteForbidden operation not supported for pre-defined networks

swagger:response networkDeleteForbidden
*/
type NetworkDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewNetworkDeleteForbidden creates NetworkDeleteForbidden with default headers values
func NewNetworkDeleteForbidden() *NetworkDeleteForbidden {

	return &NetworkDeleteForbidden{}
}

// WithPayload adds the payload to the network delete forbidden response
func (o *NetworkDeleteForbidden) WithPayload(payload *models.ErrorResponse) *NetworkDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the network delete forbidden response
func (o *NetworkDeleteForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NetworkDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NetworkDeleteNotFoundCode is the HTTP code returned for type NetworkDeleteNotFound
const NetworkDeleteNotFoundCode int = 404

/*NetworkDeleteNotFound no such network

swagger:response networkDeleteNotFound
*/
type NetworkDeleteNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewNetworkDeleteNotFound creates NetworkDeleteNotFound with default headers values
func NewNetworkDeleteNotFound() *NetworkDeleteNotFound {

	return &NetworkDeleteNotFound{}
}

// WithPayload adds the payload to the network delete not found response
func (o *NetworkDeleteNotFound) WithPayload(payload *models.ErrorResponse) *NetworkDeleteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the network delete not found response
func (o *NetworkDeleteNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NetworkDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// NetworkDeleteInternalServerErrorCode is the HTTP code returned for type NetworkDeleteInternalServerError
const NetworkDeleteInternalServerErrorCode int = 500

/*NetworkDeleteInternalServerError Server error

swagger:response networkDeleteInternalServerError
*/
type NetworkDeleteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewNetworkDeleteInternalServerError creates NetworkDeleteInternalServerError with default headers values
func NewNetworkDeleteInternalServerError() *NetworkDeleteInternalServerError {

	return &NetworkDeleteInternalServerError{}
}

// WithPayload adds the payload to the network delete internal server error response
func (o *NetworkDeleteInternalServerError) WithPayload(payload *models.ErrorResponse) *NetworkDeleteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the network delete internal server error response
func (o *NetworkDeleteInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NetworkDeleteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

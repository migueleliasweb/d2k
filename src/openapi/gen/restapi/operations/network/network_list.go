// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// NetworkListHandlerFunc turns a function with the right signature into a network list handler
type NetworkListHandlerFunc func(NetworkListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NetworkListHandlerFunc) Handle(params NetworkListParams) middleware.Responder {
	return fn(params)
}

// NetworkListHandler interface for that can handle valid network list params
type NetworkListHandler interface {
	Handle(NetworkListParams) middleware.Responder
}

// NewNetworkList creates a new http.Handler for the network list operation
func NewNetworkList(ctx *middleware.Context, handler NetworkListHandler) *NetworkList {
	return &NetworkList{Context: ctx, Handler: handler}
}

/* NetworkList swagger:route GET /networks Network networkList

List networks

Returns a list of networks. For details on the format, see the
[network inspect endpoint](#operation/NetworkInspect).

Note that it uses a different, smaller representation of a network than
inspecting a single network. For example, the list of containers attached
to the network is not propagated in API versions 1.28 and up.


*/
type NetworkList struct {
	Context *middleware.Context
	Handler NetworkListHandler
}

func (o *NetworkList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewNetworkListParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

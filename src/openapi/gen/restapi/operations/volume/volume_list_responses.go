// Code generated by go-swagger; DO NOT EDIT.

package volume

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// VolumeListOKCode is the HTTP code returned for type VolumeListOK
const VolumeListOKCode int = 200

/*VolumeListOK Summary volume data that matches the query

swagger:response volumeListOK
*/
type VolumeListOK struct {

	/*
	  In: Body
	*/
	Payload *VolumeListOKBody `json:"body,omitempty"`
}

// NewVolumeListOK creates VolumeListOK with default headers values
func NewVolumeListOK() *VolumeListOK {

	return &VolumeListOK{}
}

// WithPayload adds the payload to the volume list o k response
func (o *VolumeListOK) WithPayload(payload *VolumeListOKBody) *VolumeListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the volume list o k response
func (o *VolumeListOK) SetPayload(payload *VolumeListOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VolumeListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VolumeListInternalServerErrorCode is the HTTP code returned for type VolumeListInternalServerError
const VolumeListInternalServerErrorCode int = 500

/*VolumeListInternalServerError Server error

swagger:response volumeListInternalServerError
*/
type VolumeListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewVolumeListInternalServerError creates VolumeListInternalServerError with default headers values
func NewVolumeListInternalServerError() *VolumeListInternalServerError {

	return &VolumeListInternalServerError{}
}

// WithPayload adds the payload to the volume list internal server error response
func (o *VolumeListInternalServerError) WithPayload(payload *models.ErrorResponse) *VolumeListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the volume list internal server error response
func (o *VolumeListInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VolumeListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

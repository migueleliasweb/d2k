// Code generated by go-swagger; DO NOT EDIT.

package volume

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// VolumeCreateCreatedCode is the HTTP code returned for type VolumeCreateCreated
const VolumeCreateCreatedCode int = 201

/*VolumeCreateCreated The volume was created successfully

swagger:response volumeCreateCreated
*/
type VolumeCreateCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Volume `json:"body,omitempty"`
}

// NewVolumeCreateCreated creates VolumeCreateCreated with default headers values
func NewVolumeCreateCreated() *VolumeCreateCreated {

	return &VolumeCreateCreated{}
}

// WithPayload adds the payload to the volume create created response
func (o *VolumeCreateCreated) WithPayload(payload *models.Volume) *VolumeCreateCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the volume create created response
func (o *VolumeCreateCreated) SetPayload(payload *models.Volume) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VolumeCreateCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VolumeCreateInternalServerErrorCode is the HTTP code returned for type VolumeCreateInternalServerError
const VolumeCreateInternalServerErrorCode int = 500

/*VolumeCreateInternalServerError Server error

swagger:response volumeCreateInternalServerError
*/
type VolumeCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewVolumeCreateInternalServerError creates VolumeCreateInternalServerError with default headers values
func NewVolumeCreateInternalServerError() *VolumeCreateInternalServerError {

	return &VolumeCreateInternalServerError{}
}

// WithPayload adds the payload to the volume create internal server error response
func (o *VolumeCreateInternalServerError) WithPayload(payload *models.ErrorResponse) *VolumeCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the volume create internal server error response
func (o *VolumeCreateInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VolumeCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package plugin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PluginUpgradeHandlerFunc turns a function with the right signature into a plugin upgrade handler
type PluginUpgradeHandlerFunc func(PluginUpgradeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PluginUpgradeHandlerFunc) Handle(params PluginUpgradeParams) middleware.Responder {
	return fn(params)
}

// PluginUpgradeHandler interface for that can handle valid plugin upgrade params
type PluginUpgradeHandler interface {
	Handle(PluginUpgradeParams) middleware.Responder
}

// NewPluginUpgrade creates a new http.Handler for the plugin upgrade operation
func NewPluginUpgrade(ctx *middleware.Context, handler PluginUpgradeHandler) *PluginUpgrade {
	return &PluginUpgrade{Context: ctx, Handler: handler}
}

/* PluginUpgrade swagger:route POST /plugins/{name}/upgrade Plugin pluginUpgrade

Upgrade a plugin

*/
type PluginUpgrade struct {
	Context *middleware.Context
	Handler PluginUpgradeHandler
}

func (o *PluginUpgrade) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPluginUpgradeParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PluginUpgradeParamsBodyItems0 Describes a permission accepted by the user upon installing the
// plugin.
//
//
// swagger:model PluginUpgradeParamsBodyItems0
type PluginUpgradeParamsBodyItems0 struct {

	// description
	Description string `json:"Description,omitempty"`

	// name
	Name string `json:"Name,omitempty"`

	// value
	Value []string `json:"Value"`
}

// Validate validates this plugin upgrade params body items0
func (o *PluginUpgradeParamsBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this plugin upgrade params body items0 based on context it is used
func (o *PluginUpgradeParamsBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PluginUpgradeParamsBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PluginUpgradeParamsBodyItems0) UnmarshalBinary(b []byte) error {
	var res PluginUpgradeParamsBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

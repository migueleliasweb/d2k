// Code generated by go-swagger; DO NOT EDIT.

package session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/migueleliasweb/d2k/src/openapi/gen/models"
)

// SessionSwitchingProtocolsCode is the HTTP code returned for type SessionSwitchingProtocols
const SessionSwitchingProtocolsCode int = 101

/*SessionSwitchingProtocols no error, hijacking successful

swagger:response sessionSwitchingProtocols
*/
type SessionSwitchingProtocols struct {
}

// NewSessionSwitchingProtocols creates SessionSwitchingProtocols with default headers values
func NewSessionSwitchingProtocols() *SessionSwitchingProtocols {

	return &SessionSwitchingProtocols{}
}

// WriteResponse to the client
func (o *SessionSwitchingProtocols) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(101)
}

// SessionBadRequestCode is the HTTP code returned for type SessionBadRequest
const SessionBadRequestCode int = 400

/*SessionBadRequest bad parameter

swagger:response sessionBadRequest
*/
type SessionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSessionBadRequest creates SessionBadRequest with default headers values
func NewSessionBadRequest() *SessionBadRequest {

	return &SessionBadRequest{}
}

// WithPayload adds the payload to the session bad request response
func (o *SessionBadRequest) WithPayload(payload *models.ErrorResponse) *SessionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the session bad request response
func (o *SessionBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SessionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SessionInternalServerErrorCode is the HTTP code returned for type SessionInternalServerError
const SessionInternalServerErrorCode int = 500

/*SessionInternalServerError server error

swagger:response sessionInternalServerError
*/
type SessionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSessionInternalServerError creates SessionInternalServerError with default headers values
func NewSessionInternalServerError() *SessionInternalServerError {

	return &SessionInternalServerError{}
}

// WithPayload adds the payload to the session internal server error response
func (o *SessionInternalServerError) WithPayload(payload *models.ErrorResponse) *SessionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the session internal server error response
func (o *SessionInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SessionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
